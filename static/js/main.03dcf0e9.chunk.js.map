{"version":3,"sources":["component/Filter/Filter.module.css","component/InputForm/InputForm.module.css","component/InputForm/InputForm.jsx","component/PhoneBook/PhoneBook.jsx","component/Filter/Filter.jsx","App.jsx","reportWebVitals.js","index.js","component/PhoneBook/PhoneBook.module.css"],"names":["module","exports","InputForm","onSubmit","useState","name","setName","number","setNumber","handelChange","event","currentTarget","value","reset","className","style","Form","preventDefault","FormInput","id","onChange","type","button","Phonebook","date","onDelete","itemContainer","map","item","deleteButton","onClick","centr","shortid","generate","Filter","FilterContainer","FilterInput","App","filter","setFilter","JSON","parse","window","localStorage","getItem","contacts","setContacts","useEffect","setItem","stringify","visibleContact","normalizedFilter","toLowerCase","contact","includes","findContact","data","find","toast","warn","prevContacts","addContacts","ev","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03dcf0e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__3NvYb\",\"FilterContainer\":\"Filter_FilterContainer__2a7bX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputForm_Form__18bWt\",\"InputForm\":\"InputForm_InputForm__2eBNp\",\"FormInput\":\"InputForm_FormInput__3oAMt\",\"button\":\"InputForm_button__37ijI\"};","import React, { useState } from \"react\";\n// import PropTypes from 'prop-types';\nimport style from \"./InputForm.module.css\";\nfunction InputForm({ onSubmit }) {\n  // state = {\n  //   name: \"\",\n  //   number: \"\",\n  // };\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handelChange = (event) => {\n    const { name, value } = event.currentTarget;\n    // this.setState({ [name]: value });\n    // console.log(event.currentTarget);\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state)\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  // const { name, number } = this.state;\n  return (\n    <form className={style.Form} onSubmit={handleSubmit}>\n      <div className={style.InputForm}>\n        <label>Имя</label>\n        <input\n          className={style.FormInput}\n          id=\"name\"\n          value={name}\n          onChange={handelChange}\n          type=\"tex\"\n          name=\"name\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          // required\n        />\n      </div>\n\n      <div className={style.InputForm}>\n        <label>Телефон</label>\n        <input\n          className={style.FormInput}\n          id=\"number\"\n          value={number}\n          onChange={handelChange}\n          type=\"tex\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          // required\n        />\n      </div>\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default InputForm;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport style from \"./PhoneBook.module.css\";\n\nconst Phonebook = ({ date, onDelete }) => {\n  // const keyId = shortid.generate();\n\n  return (\n    <div className={style.itemContainer}>\n      <ul>\n        {date.map(({ name, number }) => (\n          <li className={style.item} key={shortid.generate()}>\n            <span>{name}: </span>\n            <span>{number} </span>\n            <button\n              className={style.deleteButton}\n              type=\"button\"\n              onClick={() => onDelete(name)}\n            >\n              <p className={style.centr}>❌</p>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <div className={style.FilterContainer}>\n        <label>Find contacts by name</label>\n        <input\n          className={style.FilterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { toast } from \"react-toastify\";\nimport InputForm from \"./component/InputForm/InputForm\";\nimport Phonebook from \"./component/PhoneBook/PhoneBook\";\nimport Filter from \"./component/Filter/Filter\";\nimport \"./App.css\";\n\nfunction App() {\n  // state = {\n  //   contacts: [\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //   ],\n  //   filter: \"\",\n  // };\n  const [filter, setFilter] = useState(\"\");\n\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsContacts = JSON.parse(contacts);\n\n  //   if (parsContacts) {\n  //     this.setState({ contacts: parsContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevPr, { contacts }) {\n  //   const newContact = this.state.contacts;\n  //   if (newContact !== contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(newContact));\n  //   }\n  // }\n\n  const addContacts = ({ name, number }) => {\n    // const { contacts } = this.state;\n    const contact = {\n      name,\n      number,\n      id: shortid.generate(),\n    };\n\n    const findContact = contacts.find((item) => item.name === contact.name);\n    if (findContact) {\n      // alert(\"котакт уже є\");\n      return toast.warn(`${contact.name} is already in contacts`);\n    }\n\n    setContacts((prevContacts) => [...prevContacts, contact]);\n  };\n\n  const deleteContact = (name) => {\n    // const { contacts } = this.state;\n\n    // this.setState({\n    //   contacts: contacts.filter((contact) => contact.name !== name),\n    // });\n    setContacts(contacts.filter((contact) => contact.name !== name));\n  };\n\n  const findContact = () => {\n    // const { contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const changeFilter = (ev) => {\n    // this.setState({ filter: target.value });\n    setFilter(ev.target.value);\n  };\n\n  const formSabmitHangler = (data) => {\n    // console.log(data);\n    addContacts(data);\n  };\n\n  // const { contacts } = this.state;\n\n  const visibleContact = filter === 0 ? contacts : findContact();\n\n  // const { filter } = this.state;\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"title\"> PhoneBook </h1>\n        <InputForm onSubmit={formSabmitHangler} />\n\n        <Filter value={filter} onChange={changeFilter} />\n\n        <Phonebook date={visibleContact} onDelete={deleteContact} />\n      </div>\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsContacts = JSON.parse(contacts);\n\n//     if (parsContacts) {\n//       this.setState({ contacts: parsContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevPr, { contacts }) {\n//     const newContact = this.state.contacts;\n//     if (newContact !== contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(newContact));\n//     }\n//   }\n\n//   addContacts = ({ name, number }) => {\n//     const { contacts } = this.state;\n//     const contact = {\n//       name,\n//       number,\n//       id: shortid.generate(),\n//     };\n\n//     const findContact = contacts.find(contact => contact.name.includes(name));\n//     if (findContact) {\n//       alert('котакт уже є');\n//     } else {\n//       this.setState(({ contacts }) => ({\n//         contacts: [contact, ...contacts],\n//       }));\n//     }\n//   };\n\n//   deleteContact = name => {\n//     const { contacts } = this.state;\n\n//     this.setState({\n//       contacts: contacts.filter(contact => contact.name !== name),\n//     });\n//   };\n\n//   findContact = () => {\n//     const { contacts } = this.state;\n\n//     const normalizedFilter = this.state.filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   changeFilter = ({ target }) => {\n//     this.setState({ filter: target.value });\n//   };\n\n//   formSabmitHangler = data => {\n//     // console.log(data);\n//     this.addContacts(data);\n//   };\n\n//   render() {\n//     const { contacts } = this.state;\n\n//     const visibleContact =\n//       this.state.filter === 0 ? contacts : this.findContact();\n\n//     const { filter } = this.state;\n\n//     return (\n//       <>\n//         <div className=\"container\">\n//           <h1 className=\"title\"> PhoneBook </h1>\n//           <InputForm onSubmit={this.formSabmitHangler} />\n\n//           <Filter value={filter} onChange={this.changeFilter} />\n\n//           <Phonebook date={visibleContact} onDelete={this.deleteContact} />\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PhoneBook_item__1R_1H\",\"deleteButton\":\"PhoneBook_deleteButton__k6QjX\",\"centr\":\"PhoneBook_centr__gVVY6\",\"itemContainer\":\"PhoneBook_itemContainer__3u9cx\"};"],"sourceRoot":""}